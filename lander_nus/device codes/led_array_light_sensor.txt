#include "stdio.h"

#include "lpc17xx.h"
#include "lpc17xx_pinsel.h"
#include "lpc17xx_gpio.h"
#include "lpc17xx_i2c.h"
#include "lpc17xx_ssp.h"
#include "lpc17xx_timer.h"

#include "joystick.h"
#include "pca9532.h"
#include "acc.h"
#include "oled.h"
#include "rgb.h"
#include "led7seg.h"
#include "temp.h"
#include "light.h"

volatile uint32_t msTicks;

static void init_i2c(void)
{
	PINSEL_CFG_Type PinCfg;

	/* Initialize I2C2 pin connect */
	PinCfg.Funcnum = 2;
	PinCfg.Portnum = 0;
	PinCfg.Pinnum = 10;
	PINSEL_ConfigPin(&PinCfg);
	PinCfg.Pinnum = 11;
	PINSEL_ConfigPin(&PinCfg);

	// Initialize I2C peripheral
	I2C_Init(LPC_I2C2, 100000);

	/* Enable I2C1 operation */
	I2C_Cmd(LPC_I2C2, ENABLE);
}

int main(void) {

	init_i2c();

	// Enable Light Sensor
	light_init();
	light_enable();

	// Enable LED array
	pca9532_init();

	uint32_t my_light_value = 0;
	pca9532_setLeds(0xFFFF, 0xFFFF);

	float initial_power = 100;
	float percentage = 0.875;

	while(1)
	{
		// To read from light sensor
		my_light_value = light_read();
		printf("Light Intensity: %u lux\n", my_light_value);

		if (my_light_value < 400) {
			pca9532_setLeds(0xAA00, 0xFFFF);
		}
		else {
			pca9532_setLeds(0x00AA, 0xFFFF);
		}
	}
}

void check_failed(uint8_t *file, uint32_t line)
{
	/* User can add his own implementation to report the file name and line number,
	 ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */

	/* Infinite loop */
	while(1);
}